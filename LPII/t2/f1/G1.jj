options {
LOOKAHEAD=1; 
}

PARSER_BEGIN(Parser)

package t2.f1 ;

public class Parser {}
PARSER_END(Parser)

SKIP :
{
        " "
|       "\r"
|       "\t"
}

TOKEN :
{
        < EOL: "\n" >
|       < PLUS: "+" >
|		< MINUS: "-" >
|       < MULTIPLY: "*" >
|		< DIVISION: "/" >
|       < LPAR: "(" >
|       < RPAR: ")" >
|       < CONSTANT: ( <DIGIT> )+ >
|       < #DIGIT: ["0" - "9"] >
}

void Start() :
{ }
{
    exp() <EOL>        
}

void exp() :
{ }
{
    term() [ <PLUS> exp() | <MINUS> exp()]
}

void term() :
{ }
{
    factor() [ <MULTIPLY> term() | <DIVISION> term()]
}

void factor() :
{  }
{
    <CONSTANT> 
|   <LPAR> exp() <RPAR> 
}
